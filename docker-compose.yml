version: '3.4'

services:
  ecommerce.catalog:
    image: ${DOCKER_REGISTRY-}ecommercecatalog
    build:
      context: .
      dockerfile: Ecommerce.Catalog/Dockerfile
    networks:
        - backend
    depends_on:
        mysql:
            condition: service_started
        rabbitmq:
            condition: service_started

  ecommerce.catalog.worker:
    image: ${DOCKER_REGISTRY-}ecommercecatalogworker
    build:
      context: .
      dockerfile: Ecommerce.Catalog.Worker/Dockerfile
    networks:
        - backend
    depends_on:
        rabbitmq:
            condition: service_started

  mysql:
    container_name: mysql
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: "mysqlpwd"
      MYSQL_DATABASE: "catalog"
    ports:
      - "3306:3306"
    volumes:
      - ./mysql_data:/var/lib/mysql
    networks:
      - backend

  adminer:
    container_name: adminer
    image: adminer
    ports:
      - 8080:8080
    networks:
      - backend

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
        - 5672:5672
        - 15672:15672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - backend

networks: 
  backend:
    driver: bridge
